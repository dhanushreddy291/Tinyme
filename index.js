addEventListener("fetch", event => {
    if (event.request.method === 'POST') {
        event.respondWith(Adder(event.request))
    } else {
        event.respondWith(handleRequest(event.request));
    }
})

async function handleRequest(request) {
    const url = new URL(request.url);
    const shortURL = url.pathname.replace('/', '');
    if (shortURL.length === 0) {
        const index = () => {
            return "<!DOCTYPE html><html lang=\"en\"> <head> <meta charset=\"UTF-8\"/> <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\"/> <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"/> <meta name=\"description\" content=\"A URL Shortner built on Upstash and Cloudflare Workers\"/> <title>Shorty: An Ultrafast URL Shortner built on Cloudflare Workers</title> <style>@import url(\"https://fonts.googleapis.com/css?family=Roboto:400,700&display=swap\"); :root{--space-root: 1rem; --space-xs: calc(var(--space-root) / 2); --space-s: calc(var(--space-root) / 1.5); --space-m: var(--space-root); --space-l: calc(var(--space-root) * 1.5); --space-xl: calc(var(--space-root) * 2); --color-primary: rgb(255, 255, 255); --color-secondary: black; --base-border-radius: 0.25rem; --ease: cubic-bezier(0.075, 0.82, 0.165, 1); --duration: 350ms; --font-family: \"Roboto\", sans-serif; --font-size: 1.25rem;}*{box-sizing: border-box;}body{display: grid; place-items: center; margin: 0; height: 100vh; padding: var(--space-m); font-size: var(--font-size); font-family: var(--font-family); line-height: 1.2; background-color: var(--color-primary);}a{color: var(--color-primary);}a:focus{color: var(--color-secondary);}h2{font-weight: 700; font-size: calc(var(--font-size) * 1.5); font-family: \"Roboto\", sans-serif;}.form{position: relative; width: 100%; max-width: 450px; margin: 0 auto; transform: skewY(-5deg) translateY(10%) scale(0.94); transition: box-shadow var(--duration) var(--ease), transform var(--duration) var(--ease);}.form:before, .form:after{content: \"\"; position: absolute; pointer-events: none; background-color: #ebebeb; width: 25%; height: 100%; transition: background-color var(--duration) var(--ease), transform var(--duration) var(--ease);}.form:before{top: 0; right: calc(100% - 1px); transform-origin: 100% 100%; transform: skewY(-35deg) scaleX(-1); z-index: -1;}.form:after{top: 0; left: calc(100% - 1px); transform-origin: 0 0; transform: skewY(-35deg) scaleX(-1); z-index: 2;}.form:hover, .form:focus-within{transform: scale(1.0001); box-shadow: 0 1rem 3rem rgba(0, 0, 0, 0.1);}.form:hover:before, .form:focus-within:before, .form:hover:after, .form:focus-within:after{background-color: white; transform: skewY(0);}.form-inner{padding: var(--space-xl); background-color: white; z-index: 1;}.form-inner > * + *{margin-top: var(--space-xl);}.input-wrapper:focus-within label{color: var(--color-secondary);}.input-wrapper:focus-within .icon{background-color: var(--color-secondary);}.input-wrapper:focus-within input{border-color: var(--color-secondary);}.input-wrapper + .input-wrapper{margin-top: var(--space-l);}.input-group{position: relative;}.input-group input{border-radius: var(--base-border-radius); padding-left: calc(var(--space-s) + 60px);}.input-group .icon{position: absolute; top: 0; left: 0; height: 100%; border-top-left-radius: var(--base-border-radius); border-bottom-left-radius: var(--base-border-radius); pointer-events: none;}label{font-size: calc(var(--font-size) / 1.65); font-weight: 700; text-transform: uppercase; letter-spacing: 0.065rem; display: block; margin-bottom: var(--space-xs); color: var(--color-primary);}.icon{display: flex; align-items: center; flex: 0 1 auto; padding: var(--space-m); background-color: var(--color-primary);}.icon svg{width: 1.25em; height: 1.25em; fill: white; pointer-events: none; user-select: none; transition: transform var(--duration) var(--ease);}input{flex: 1 1 0; width: 100%; outline: none; padding: var(--space-m); font-size: var(--font-size); font-family: var(--font-family); color: var(--color-secondary); border: 2px solid var(--color-primary);}input:focus{color: var(--color-primary);}.btn-group{display: flex; align-items: center; justify-content: space-between;}.btn-group > * + *{margin-left: var(--space-s);}.btn{position: relative; overflow: hidden; display: flex; align-items: center; justify-content: space-between; outline: none; padding: var(--space-m) var(--space-l); cursor: pointer; border: 2px solid transparent; border-radius: var(--base-border-radius);}.btn--primary{font-size: calc(var(--font-size) / 1.65); font-weight: 700; text-transform: uppercase; letter-spacing: 0.065rem; background-color: var(--color-primary); border-color: var(--color-primary); color: white;}.btn--primary:focus{background-color: var(--color-secondary); border-color: var(--color-secondary);}.btn--text{font-size: calc(var(--font-size) / 1.5); padding: 0;}</style> </head> <body> <form class=\"form\" id=\"URLForm\" onsubmit=\"return false\" autocomplete=\"off\"> <div class=\"form-inner\"> <h2>URL Shortner</h2> <div class=\"input-wrapper\"> <label for=\"url-to-shorten\">Enter URL</label> <div class=\"input-group\"> <span class=\"icon\" ><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-link-45deg\" viewBox=\"0 0 16 16\" > <path d=\"M4.715 6.542 3.343 7.914a3 3 0 1 0 4.243 4.243l1.828-1.829A3 3 0 0 0 8.586 5.5L8 6.086a1.002 1.002 0 0 0-.154.199 2 2 0 0 1 .861 3.337L6.88 11.45a2 2 0 1 1-2.83-2.83l.793-.792a4.018 4.018 0 0 1-.128-1.287z\"/> <path d=\"M6.586 4.672A3 3 0 0 0 7.414 9.5l.775-.776a2 2 0 0 1-.896-3.346L9.12 3.55a2 2 0 1 1 2.83 2.83l-.793.792c.112.42.155.855.128 1.287l1.372-1.372a3 3 0 1 0-4.243-4.243L6.586 4.672z\"/></svg></span ><input type=\"text\" id=\"url-to-shorten\" data-lpignore=\"true\"/> </div></div><div class=\"btn-group\"> <button type=\"submit\" id=\"shorten-url-button\" class=\"btn btn--primary\" > Shorten URL </button> <a href=\"\" id=\"urlcontainer\"></a> </div></div></form> <script>const longURL=document.querySelector(\"#url-to-shorten\"); const form=document.querySelector(\"#URLForm\"); const characters=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\"; const setColor=(color)=>{document .querySelector(\":root\") .style.setProperty(\"--color-primary\", color, null);}; const backGroundColors=[ \"#764AF1\", \"#FF4949\", \"#DEA057\", \"#FF8C32\", \"#F24A72\", \"#F0A500\", \"#5463FF\", \"#CC9544\", \"#5FD068\", \"#F47C7C\", \"#9772FB\", \"#F8B400\", \"#4D96FF\", \"#E84545\", \"#E8505B\", \"#FF9292\",]; setColor( backGroundColors[Math.floor(Math.random() * backGroundColors.length)] ); const generateRandomURL=(length)=>{let result=\"\"; for (let i=0; i < length; i++){result +=characters.charAt(Math.floor(Math.random() * 62));}return result;}; function copyToClipBoard(URLToCopy){const cb=navigator.clipboard; cb.writeText(URLToCopy).then(()=> alert(\"URL Copied\"));}const displayURL=(URL)=>{const urlToShow=window.location.href + URL; document.getElementById(\"urlcontainer\").innerHTML=urlToShow; document.getElementById(\"urlcontainer\").href=URL; copyToClipBoard(urlToShow);}; async function sendJSON(URLJSON){var response=\"Redis Server Error\"; try{response=await fetch(\"/\",{method: \"POST\", body: URLJSON, mode: \"cors\", headers:{\"Content-Type\": \"application/json\",},});}catch (err){alert(err);}return response;}function validURL(link){var valid=link.match( /(http(s)?:\\/\\/.)?(www\\.)?[-a-zA-Z0-9@:%._\\+~#=]{2,256}\\.[a-z]{2,6}\\b([-a-zA-Z0-9@:%_\\+.~#?&//=]*)/g ); return valid !==null;}form.addEventListener(\"submit\", (e)=>{e.preventDefault(); var URL=longURL.value; if (!(URL.indexOf(\"http://\")===0 || URL.indexOf(\"https://\")===0)){URL=\"http://\" + URL;}if (!validURL(URL)){alert(\"Enter a Valid URL\");}else{const randURL=generateRandomURL(5); displayURL(randURL); sendJSON(JSON.stringify({CPURL: randURL, UNCPURL: URL}));}}); </script> </body></html>";
        }
        return new Response(index(), {
            headers: {
                "Content-Type": "text/html"
            },
        });
    } else {
        let origURL = await SHORTY.get(shortURL);
        if (origURL) {
            return Response.redirect(origURL, 301);
        } else {
            const invalidURL = "<!DOCTYPE html><html lang=\"en\"> <head> <meta charset=\"UTF-8\"/> <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\"/> <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"/> <title>Invalid URL</title> <style>@import url(\"https://fonts.googleapis.com/css2?family=M+PLUS+1+Code:wght@600&family=VT323&display=swap\"); :root{--bck: rgb(246, 83, 124); --font: rgb(241, 241, 241); --glitch1: hsl(214, 50%, 52%); --glitch2: hsl(9, 50%, 52%); --glitch3: hsl(61, 50%, 52%);}*{margin: 0; padding: 0;}#main{width: 100vw; height: 100vh; display: flex; align-items: center; justify-content: center; background: var(--bck);}h1{color: rgb(255, 255, 255); text-align: center; font-size: 10rem; font-family: \"VT323\", monospace; text-shadow: 6px 4px var(--glitch2), 5px -5px var(--glitch1), 2px -4px var(--glitch3); animation: glitch 0.5s infinite;}#txt::after{content: \"\"; position: absolute; height: 0.3rem; width: 100%; background: var(--bck); bottom: 0; left: 0; transform: translateY(10px); animation: line 0.4s infinite; box-shadow: 0px 0px 2px 2px var(--bck);}#txt::before{content: \"\"; position: absolute; height: 0.3rem; width: 100%; background: var(--bck); bottom: 0; left: 0; animation: lineTwo 0.9s infinite; box-shadow: 0px 0px 4px 3px var(--bck);}#txt{position: relative; transform: translateX(5px, 3px); animation: move 0.8s infinite;}@keyframes glitch{0%{text-shadow: 6px 4px var(--glitch2), 5px -5px var(--glitch1), 2px -4px var(--glitch3);}1%{text-shadow: -2px 0px var(--glitch2), -5px 5px var(--glitch1), 2px 4px var(--glitch3);}19%{text-shadow: -2px 0px var(--glitch2), -5px 5px var(--glitch1), 2px 4px var(--glitch3);}20%{text-shadow: -4px 4px var(--glitch2), 3px 3px var(--glitch1), -2px 4px var(--glitch3);}39%{text-shadow: -4px 4px var(--glitch2), 3px 3px var(--glitch1), -2px 4px var(--glitch3);}40%{text-shadow: 1px -1px var(--glitch2), -1px 5px var(--glitch1), 6px -3px var(--glitch3);}59%{text-shadow: 1px -1px var(--glitch2), -1px 5px var(--glitch1), 6px -3px var(--glitch3);}60%{text-shadow: -5px -4px var(--glitch2), -4px 4px var(--glitch1), -3px 3px var(--glitch3);}79%{text-shadow: -5px -4px var(--glitch2), -4px 4px var(--glitch1), -3px 3px var(--glitch3);}80%{text-shadow: -4px 4px var(--glitch2), 3px 3px var(--glitch1), -2px 4px var(--glitch3);}99%{text-shadow: -4px 4px var(--glitch2), 3px 3px var(--glitch1), -2px 4px var(--glitch3);}}@keyframes line{0%{transform: translateY(10px);}50%{transform: translateY(-110px);}}@keyframes lineTwo{0%{transform: translateY(10px);}48%{transform: translateY(-110px);}50%{transform: translateY(50px);}100%{transform: translateY(-110px);}}@keyframes move{0%{transform: translate(5px, 3px);}25%{transform: translate(-4px, 1px);}50%{transform: translate(3px, -4px);}75%{transform: translate(-3px, 4px);}99%{transform: translate(5px, 3px);}}@media screen and (max-width: 720px){h1{font-size: 5rem;}}</style> </head> <body> <div id=\"main\"> <div id=\"txt\"> <h1>Invalid URL</h1> </div></div></body></html>";
            return new Response(invalidURL, {
                headers: {
                    "Content-Type": "text/html"
                },
            });
        }
    }
}

async function Adder(request) {
    let resp = await request.json();
    let temp = await SHORTY.put(resp.CPURL, resp.UNCPURL);
    return new Response(JSON.stringify(temp), {
        headers: {
            "Content-Type": "text/json"
        },
    });
}
